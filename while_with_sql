-- WHILE otomatik olarak değer üretmemizi sağlayacak -

--1 Den 10 a kadar rakam yazdıralım mesela.

DECLARE @COUNTER INT = 1
--sınır belirliyoruz.

WHILE @COUNTER < 21
BEGIN
		PRINT @COUNTER

		SET @COUNTER = @COUNTER +1
END

--------___________________________________________--

SELECT *
FROM ORDER_TBL

DECLARE @ID INT = 10 

WHILE @ID < 21
BEGIN

		INSERT ORDER_TBL VALUES (@ID, @ID, NULL, NULL, NULL)  -- sutun kendisi değer alamadığı için insert ederken null dedik
		SET @ID += 1

END

--_______FUNCTIONS_______----------------------------------------------------------------------

--SCALAR VALUED FUNCTIONS --


CREATE FUNCTION fn_upper_first_char ()  -- fonksiyonda parantez kullanılması gerekiyor.
RETURNS NVARCHAR (MAX)
AS
BEGIN
		RETURN UPPER (LEFT('character', 1)) + LOWER (RIGHT ('character', len('character')-1))
END

SELECT dbo.fn_upper_first_char () -- dbo şema ismi demektir.

-- Bunu direkt argüman atayarak ve tablo üzerinde görebiliriz.

CREATE OR ALTER FUNCTION fn_upper_first_char (@CHAR NVARCHAR (MAX)) 
RETURNS NVARCHAR (MAX)
AS
BEGIN
		RETURN UPPER (LEFT(@CHAR, 1)) + LOWER (RIGHT (@CHAR, len(@CHAR)-1))
END

SELECT *, dbo.fn_upper_first_char ('CUSTOMER_NAME') AS NEW_NAME
FROM ORDER_TBL

---___________________ TABLE VALUED FUNCTIONS__________________----

CREATE FUNCTION fn_order_tbl_2 (@CUSTOMER_NAME NVARCHAR (MAX))
RETURNS TABLE
AS
		RETURN SELECT * 
				FROM ORDER_TBL
				WHERE CUSTOMER_NAME = @CUSTOMER_NAME

SELECT *
FROM dbo.fn_order_tbl_2('Adam')

-----------------------------------------------

CREATE FUNCTION fn_order_tbl_3 ()
RETURNS @tbl TABLE (ORDER_ID INT, ORDER_DATE DATE)
AS
BEGIN                  -- bu kullanımda dsa begin - end zorunlu
		INSERT @tbl VALUES (1, '2022-10-03')
		RETURN
END


SELECT *
FROM dbo.fn_order_tbl_3 ()
